import RPi.GPIO as GPIO
from time import sleep

GPIO.setmode(GPIO.BCM)

class Motor():
    def __init__(self, EnA, In1, In2):
        self.EnA= EnA
        self.In1= In1
        self.In2= In2
        GPIO.setup(self.EnA, GPIO.OUT)
        GPIO.setup(self.In1, GPIO.OUT)
        GPIO.setup(self.In2, GPIO.OUT)
        self.pwm= GPIO.PWM(EnA, 100)
        self.pwm.start(0)
    
    def moveF(self, x=50, t=0):
        GPIO.output(self.In1, GPIO.HIGH)
        GPIO.output(self.In2, GPIO.LOW)
        self.pwm.ChangeDutyCycle(x)
        sleep(t)
    
    def moveB(self, x=50, t=0):
        GPIO.output(self.In1, GPIO.LOW)
        GPIO.output(self.In2, GPIO.HIGH)
        self.pwm.ChangeDutyCycle(x)
        sleep(t)
    
    def stop(self, t=0):
        self.pwm.ChangeDutyCycle(0)
        sleep(t)
    

M1= Motor(13, 19, 26)

try:
    
    while True:
     M1.moveF(30,2)
     M1.stop(2)
     M1.moveB(80,2)
    


except KeyboardInterrupt:
         M1.stop()
         GPIO.cleanup()
         

    
